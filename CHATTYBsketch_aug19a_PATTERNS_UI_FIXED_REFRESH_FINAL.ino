diff --git a/CHATTYBsketch_aug19a_PATTERNS_UI_FIXED_REFRESH_FINAL.ino b/CHATTYBsketch_aug19a_PATTERNS_UI_FIXED_REFRESH_FINAL.ino
index 92e7546bb35f9b38783c25ca341b2d29121a0c96..c257a4e8f6d9857341048ba736560b1f08eda323 100644
--- a/CHATTYBsketch_aug19a_PATTERNS_UI_FIXED_REFRESH_FINAL.ino
+++ b/CHATTYBsketch_aug19a_PATTERNS_UI_FIXED_REFRESH_FINAL.ino
@@ -16,97 +16,95 @@
 #define PIN_FACE1 4
 #define PIN_FACE2 5
 #define PIN_FACE3 18
 #define PIN_FACE4 19
 #define PIN_FACE5 23
 #define BRIGHT_MIN 5
 #define BRIGHT_MAX 30
 #define FACE_HOLD_MS 500
 #define MAX_STEPS 64
 #define MAX_PRESETS 200
 #define FRAME_MS 16
 CRGB leds[NUM_FACES][NUM_LEDS_FACE];Adafruit_MPU6050 mpu;Preferences prefs;AsyncWebServer server(80);AsyncWebSocket ws("/ws");
 const char*AP_SSID="CUBERT";const char*AP_PASS=NULL;
 
 enum Pattern:uint8_t{
   PATTERN_SOLID=0,
   PATTERN_BAND=1,
   PATTERN_CHECKER=2,
   PATTERN_RAINBOW=3,
   PATTERN_SINGLE_COLOR=4,
   PATTERN_HALF_SPLIT=5,
   PATTERN_RANDOM_TWINKLE=6
 ,PATTERN_TWINKLE,PATTERN_NOISE,PATTERN_SINEWAVE};
 
 struct Params{uint8_t speed;bool dirReverse;uint8_t hue,sat,val,hue2,sat2,val2,chkStep,chkBias;bool chkInvert;};
-struct FaceConfig{Pattern pattern;Params params;};
+struct FaceConfig{Pattern pattern;Params params;uint8_t rotation;};
 struct Step{uint8_t kind;uint8_t p;Params pr;uint8_t ovr,oPat,blend,oA;uint16_t sec;uint8_t pi;};
 struct StepB{uint8_t kind,p,spd,flags,h,s,v,h2,s2,v2,cs,cb,ovr,oPat,blend,oA;uint16_t sec;uint8_t pi;};
-struct PresetB{uint8_t p;Params pr;uint8_t ovr,oPat,blend,oA;};
-struct PresetG{uint8_t p;Params pr;uint8_t ovr,oPat,blend,oA;String name;};
+struct PresetB{uint8_t p;Params pr;uint8_t ovr,oPat,blend,oA;uint8_t rot[NUM_FACES];};
+struct PresetG{uint8_t p;Params pr;uint8_t ovr,oPat,blend,oA;uint8_t rot[NUM_FACES];String name;};
 
 void drawSingleColor(uint8_t f) { fill_solid(leds[f], NUM_LEDS_FACE, CHSV(160, 255, 200)); }
 void drawHalfSplit(uint8_t f) {
   for (uint16_t i = 0; i < NUM_LEDS_FACE; i++) {
     leds[f][i] = (i / PANEL_W < PANEL_H / 2) ? CHSV(0, 255, 255) : CHSV(96, 255, 255);
   }
 }
 void drawRandomTwinkle(uint8_t f) {
   for (uint16_t i = 0; i < NUM_LEDS_FACE; i++) {
     leds[f][i] = random8() < 10 ? CRGB(CHSV(random8(), 255, 255)) : CRGB::Black;
   }
 }
 
 FaceConfig faceCfg[NUM_FACES];uint8_t brightness=BRIGHT_MAX,gBrightness=100,currentFace=255;Pattern currentPattern=PATTERN_SOLID;Params liveParams;
 bool ovrEn=false;Pattern ovrPattern=PATTERN_BAND;uint8_t blendMode=0,ovrOpacity=128,ovrSpeed=30;bool ovcUse=false;uint8_t g_oh=160,g_os=255,g_ov=200,g_oh2=0,g_os2=0,g_ov2=0;
 uint32_t faceHoldUntilMs=0,lastAnimMs=0,nextFrameMs=0;float bandPhase=0,rainbowPhase=0,ovBandPhase=0,ovRainbowPhase=0;bool imuOK=false,renderDirty=true,userOverride=false;
 Step playlist[NUM_FACES][MAX_STEPS];uint8_t plLen[NUM_FACES]={0};bool plLoop[NUM_FACES]={0},plPlay[NUM_FACES]={0};uint8_t plIdx[NUM_FACES]={0};uint32_t plDueMs[NUM_FACES]={0};
 PresetG gPresets[MAX_PRESETS];uint8_t gPrLen=0;uint32_t saveDue=0;bool savePending=false;
 uint8_t px(uint16_t i){return i%PANEL_W;}uint8_t py(uint16_t i){return i/PANEL_W;}
-uint8_t vSides(uint8_t,uint16_t idx){uint8_t x=px(idx),y=py(idx);return (1)?(x&0x0F):(y&0x0F);}uint8_t vBottom(uint16_t idx){return vSides(5,idx);}
-uint8_t vTop(uint16_t idx){uint8_t x=px(idx),y=py(idx);uint8_t d1=x<y?x:y;uint8_t rx=15-x,ry=15-y;uint8_t d2=rx<ry?rx:ry;uint8_t d=d1<d2?d1:d2;int8_t rim=15-d;int8_t v=rim+0;if(v<0)v+=16;if(v>15)v-=16;return (uint8_t)v;}
-uint8_t getVForPixel(uint8_t face,uint16_t idx){if(face==0)return vTop(idx);if(face==5)return vBottom(idx);return vSides(face,idx);}
+uint8_t getVForPixel(uint8_t face,uint16_t idx){uint8_t x=px(idx),y=py(idx);uint8_t rot=faceCfg[face].rotation;bool rev=rot&4;uint8_t r=rot&3;if(rev)x=15-x;switch(r){case 1:{uint8_t nx=y;y=15-x;x=nx;break;}case 2:{x=15-x;y=15-y;break;}case 3:{uint8_t nx=15-y;y=x;x=nx;break;}}if(face==0){uint8_t d1=x<y?x:y;uint8_t rx=15-x,ry=15-y;uint8_t d2=rx<ry?rx:ry;uint8_t d=d1<d2?d1:d2;int8_t rim=15-d;int8_t v=rim+0;if(v<0)v+=16;if(v>15)v-=16;return (uint8_t)v;}return x&0x0F;}
 void scheduleSave(){savePending=true;saveDue=millis()+800;}
-void saveNow(){for(uint8_t f=0;f<NUM_FACES;f++){char key[8];snprintf(key,sizeof(key),"f%u",f);StaticJsonDocument<256>d;d["p"]=(uint8_t)faceCfg[f].pattern;JsonObject pr=d.createNestedObject("r");pr["spd"]=faceCfg[f].params.speed;pr["dir"]=faceCfg[f].params.dirReverse?1:0;pr["h"]=faceCfg[f].params.hue;pr["s"]=faceCfg[f].params.sat;pr["v"]=faceCfg[f].params.val;pr["h2"]=faceCfg[f].params.hue2;pr["s2"]=faceCfg[f].params.sat2;pr["v2"]=faceCfg[f].params.val2;pr["cs"]=faceCfg[f].params.chkStep;pr["cb"]=faceCfg[f].params.chkBias;pr["ci"]=faceCfg[f].params.chkInvert?1:0;String s;serializeJson(d,s);prefs.putString(key,s);}StaticJsonDocument<96> g;g["use"]=ovcUse?1:0;g["h"]=g_oh;g["s"]=g_os;g["v"]=g_ov;g["h2"]=g_oh2;g["s2"]=g_os2;g["v2"]=g_ov2;{String og;serializeJson(g,og);prefs.putString("ovcg",og);}prefs.putUChar("gbr",gBrightness);savePending=false;}
-bool loadFaceFromPrefs(uint8_t f){char key[8];snprintf(key,sizeof(key),"f%u",f);String s=prefs.getString(key,"");if(!s.length())return false;StaticJsonDocument<256>d;if(deserializeJson(d,s))return false;faceCfg[f].pattern=(Pattern)(uint8_t)d["p"];JsonObject pr=d["r"];faceCfg[f].params.speed=pr["spd"]|30;faceCfg[f].params.dirReverse=(pr["dir"]|0)?true:false;faceCfg[f].params.hue=pr["h"]|160;faceCfg[f].params.sat=pr["s"]|255;faceCfg[f].params.val=pr["v"]|200;faceCfg[f].params.hue2=pr["h2"]|0;faceCfg[f].params.sat2=pr["s2"]|0;faceCfg[f].params.val2=pr["v2"]|0;faceCfg[f].params.chkStep=pr["cs"]|4;faceCfg[f].params.chkBias=pr["cb"]|0;faceCfg[f].params.chkInvert=(pr["ci"]|0)?true:false;return true;}
-void defaultsFace(uint8_t f){faceCfg[f].pattern=PATTERN_SOLID;faceCfg[f].params={30,false,160,255,200,0,0,0,4,0,false};}
+void saveNow(){for(uint8_t f=0;f<NUM_FACES;f++){char key[8];snprintf(key,sizeof(key),"f%u",f);StaticJsonDocument<256>d;d["p"]=(uint8_t)faceCfg[f].pattern;d["rot"]=faceCfg[f].rotation;JsonObject pr=d.createNestedObject("r");pr["spd"]=faceCfg[f].params.speed;pr["dir"]=faceCfg[f].params.dirReverse?1:0;pr["h"]=faceCfg[f].params.hue;pr["s"]=faceCfg[f].params.sat;pr["v"]=faceCfg[f].params.val;pr["h2"]=faceCfg[f].params.hue2;pr["s2"]=faceCfg[f].params.sat2;pr["v2"]=faceCfg[f].params.val2;pr["cs"]=faceCfg[f].params.chkStep;pr["cb"]=faceCfg[f].params.chkBias;pr["ci"]=faceCfg[f].params.chkInvert?1:0;String s;serializeJson(d,s);prefs.putString(key,s);}StaticJsonDocument<96> g;g["use"]=ovcUse?1:0;g["h"]=g_oh;g["s"]=g_os;g["v"]=g_ov;g["h2"]=g_oh2;g["s2"]=g_os2;g["v2"]=g_ov2;{String og;serializeJson(g,og);prefs.putString("ovcg",og);}prefs.putUChar("gbr",gBrightness);savePending=false;}
+bool loadFaceFromPrefs(uint8_t f){char key[8];snprintf(key,sizeof(key),"f%u",f);String s=prefs.getString(key,"");if(!s.length())return false;StaticJsonDocument<256>d;if(deserializeJson(d,s))return false;faceCfg[f].pattern=(Pattern)(uint8_t)d["p"];faceCfg[f].rotation=d["rot"]|0;JsonObject pr=d["r"];faceCfg[f].params.speed=pr["spd"]|30;faceCfg[f].params.dirReverse=(pr["dir"]|0)?true:false;faceCfg[f].params.hue=pr["h"]|160;faceCfg[f].params.sat=pr["s"]|255;faceCfg[f].params.val=pr["v"]|200;faceCfg[f].params.hue2=pr["h2"]|0;faceCfg[f].params.sat2=pr["s2"]|0;faceCfg[f].params.val2=pr["v2"]|0;faceCfg[f].params.chkStep=pr["cs"]|4;faceCfg[f].params.chkBias=pr["cb"]|0;faceCfg[f].params.chkInvert=(pr["ci"]|0)?true:false;return true;}
+void defaultsFace(uint8_t f){faceCfg[f].pattern=PATTERN_SOLID;faceCfg[f].params={30,false,160,255,200,0,0,0,4,0,false};faceCfg[f].rotation=0;}
 void applyFaceConfig(uint8_t f){currentPattern=faceCfg[f].pattern;liveParams=faceCfg[f].params;renderDirty=true;}
 void loadOverlayGlobals(){String s=prefs.getString("ovcg","");if(!s.length())return;StaticJsonDocument<96>d;if(deserializeJson(d,s))return;ovcUse=(d["use"]|0)?true:false;g_oh=d["h"]|160;g_os=d["s"]|255;g_ov=d["v"]|200;g_oh2=d["h2"]|0;g_os2=d["s2"]|0;g_ov2=d["v2"]|0;}
 void saveOverlayGlobals(){scheduleSave();}
 void prgStoreCount(){prefs.putUChar("prN",gPrLen);}
-void prgStoreOne(uint8_t i){PresetB b;PresetG &pt=gPresets[i];b.p=pt.p;b.pr=pt.pr;b.ovr=pt.ovr;b.oPat=pt.oPat;b.blend=pt.blend;b.oA=pt.oA;char kb[8];snprintf(kb,sizeof(kb),"pg%u",i);prefs.putBytes(kb,&b,sizeof(b));char kn[8];snprintf(kn,sizeof(kn),"pn%u",i);prefs.putString(kn,pt.name);}
-bool prgLoadOne(uint8_t i){PresetB b;char kb[8];snprintf(kb,sizeof(kb),"pg%u",i);size_t n=prefs.getBytes(kb,&b,sizeof(b));if(n!=sizeof(b))return false;PresetG &pt=gPresets[i];pt.p=b.p;pt.pr=b.pr;pt.ovr=b.ovr;pt.oPat=b.oPat;pt.blend=b.blend;pt.oA=b.oA;char kn[8];snprintf(kn,sizeof(kn),"pn%u",i);pt.name=prefs.getString(kn,String("Preset ")+String(i+1));return true;}
-void prgMigrateFromLegacy(){String s=prefs.getString("prG","");if(!s.length())return;StaticJsonDocument<4096>d;if(deserializeJson(d,s))return;uint8_t n=min<uint8_t>((uint8_t)(d["n"]|0),MAX_PRESETS);JsonArray a=d["l"];gPrLen=0;for(JsonObject o:a){if(gPrLen>=n)break;PresetG &pt=gPresets[gPrLen];pt.p=o["p"]|0;pt.pr.speed=o["spd"]|30;pt.pr.dirReverse=(o["dir"]|0)?true:false;pt.pr.hue=o["h"]|160;pt.pr.sat=o["s"]|255;pt.pr.val=o["v"]|200;pt.pr.hue2=o["h2"]|0;pt.pr.sat2=o["s2"]|0;pt.pr.val2=o["v2"]|0;pt.pr.chkStep=o["cs"]|4;pt.pr.chkBias=o["cb"]|0;pt.pr.chkInvert=(o["ci"]|0)?true:false;pt.ovr=o["ovr"]|0;pt.oPat=o["opat"]|1;pt.blend=o["blend"]|0;pt.oA=o["oa"]|128;pt.name=String((const char*)(o["name"]|"Preset"));prgStoreOne(gPrLen);gPrLen++;}prgStoreCount();prefs.remove("prG");}
-void prgLoad(){uint8_t n=prefs.getUChar("prN",255);if(n==255){gPrLen=0;prgMigrateFromLegacy();return;}gPrLen=min<uint8_t>(n,MAX_PRESETS);for(uint8_t i=0;i<gPrLen;i++){if(!prgLoadOne(i)){gPresets[i].p=0;gPresets[i].pr={30,false,160,255,200,0,0,0,4,0,false};gPresets[i].ovr=0;gPresets[i].oPat=1;gPresets[i].blend=0;gPresets[i].oA=128;gPresets[i].name=String("Preset ")+String(i+1);prgStoreOne(i);}}}
-void prgBroadcast(){StaticJsonDocument<4096>d;JsonObject pr=d.createNestedObject("presetsG");JsonArray a=pr.createNestedArray("l");for(uint8_t i=0;i<gPrLen;i++){PresetG &pt=gPresets[i];JsonObject o=a.createNestedObject();o["i"]=i;o["name"]=pt.name;o["p"]=pt.p;o["spd"]=pt.pr.speed;o["dir"]=pt.pr.dirReverse?1:0;o["h"]=pt.pr.hue;o["s"]=pt.pr.sat;o["v"]=pt.pr.val;o["h2"]=pt.pr.hue2;o["s2"]=pt.pr.sat2;o["v2"]=pt.pr.val2;o["cs"]=pt.pr.chkStep;o["cb"]=pt.pr.chkBias;o["ci"]=pt.pr.chkInvert?1:0;o["ovr"]=pt.ovr;o["opat"]=pt.oPat;o["blend"]=pt.blend;o["oa"]=pt.oA;}String s;serializeJson(d,s);ws.textAll(s);}
-bool prgAdd(const String&name){if(gPrLen>=MAX_PRESETS)return false;PresetG &pt=gPresets[gPrLen++];pt.p=(uint8_t)currentPattern;pt.pr=liveParams;pt.ovr=ovrEn?1:0;pt.oPat=(uint8_t)ovrPattern;pt.blend=blendMode;pt.oA=ovrOpacity;pt.name=name.length()?name:String("Preset ")+String(gPrLen);prgStoreOne(gPrLen-1);prgStoreCount();return true;}
-bool prgApply(uint8_t idx){if(idx>=gPrLen)return false;PresetG &pt=gPresets[idx];currentPattern=(Pattern)pt.p;liveParams=pt.pr;ovrEn=pt.ovr?true:false;ovrPattern=(Pattern)pt.oPat;blendMode=pt.blend;ovrOpacity=pt.oA;faceCfg[currentFace].pattern=currentPattern;faceCfg[currentFace].params=liveParams;scheduleSave();renderDirty=true;broadcastState(true);if(currentFace<NUM_FACES&&plPlay[currentFace])plPlay[currentFace]=false;userOverride=true;return true;}
+void prgStoreOne(uint8_t i){PresetB b;PresetG &pt=gPresets[i];b.p=pt.p;b.pr=pt.pr;b.ovr=pt.ovr;b.oPat=pt.oPat;b.blend=pt.blend;b.oA=pt.oA;for(uint8_t f=0;f<NUM_FACES;f++)b.rot[f]=pt.rot[f];char kb[8];snprintf(kb,sizeof(kb),"pg%u",i);prefs.putBytes(kb,&b,sizeof(b));char kn[8];snprintf(kn,sizeof(kn),"pn%u",i);prefs.putString(kn,pt.name);}
+bool prgLoadOne(uint8_t i){PresetB b;char kb[8];snprintf(kb,sizeof(kb),"pg%u",i);size_t n=prefs.getBytes(kb,&b,sizeof(b));if(n!=sizeof(b))return false;PresetG &pt=gPresets[i];pt.p=b.p;pt.pr=b.pr;pt.ovr=b.ovr;pt.oPat=b.oPat;pt.blend=b.blend;pt.oA=b.oA;for(uint8_t f=0;f<NUM_FACES;f++)pt.rot[f]=b.rot[f];char kn[8];snprintf(kn,sizeof(kn),"pn%u",i);pt.name=prefs.getString(kn,String("Preset ")+String(i+1));return true;}
+void prgMigrateFromLegacy(){String s=prefs.getString("prG","");if(!s.length())return;StaticJsonDocument<4096>d;if(deserializeJson(d,s))return;uint8_t n=min<uint8_t>((uint8_t)(d["n"]|0),MAX_PRESETS);JsonArray a=d["l"];gPrLen=0;for(JsonObject o:a){if(gPrLen>=n)break;PresetG &pt=gPresets[gPrLen];pt.p=o["p"]|0;pt.pr.speed=o["spd"]|30;pt.pr.dirReverse=(o["dir"]|0)?true:false;pt.pr.hue=o["h"]|160;pt.pr.sat=o["s"]|255;pt.pr.val=o["v"]|200;pt.pr.hue2=o["h2"]|0;pt.pr.sat2=o["s2"]|0;pt.pr.val2=o["v2"]|0;pt.pr.chkStep=o["cs"]|4;pt.pr.chkBias=o["cb"]|0;pt.pr.chkInvert=(o["ci"]|0)?true:false;pt.ovr=o["ovr"]|0;pt.oPat=o["opat"]|1;pt.blend=o["blend"]|0;pt.oA=o["oa"]|128;pt.name=String((const char*)(o["name"]|"Preset"));for(uint8_t f=0;f<NUM_FACES;f++)pt.rot[f]=0;prgStoreOne(gPrLen);gPrLen++;}prgStoreCount();prefs.remove("prG");}
+void prgLoad(){uint8_t n=prefs.getUChar("prN",255);if(n==255){gPrLen=0;prgMigrateFromLegacy();return;}gPrLen=min<uint8_t>(n,MAX_PRESETS);for(uint8_t i=0;i<gPrLen;i++){if(!prgLoadOne(i)){gPresets[i].p=0;gPresets[i].pr={30,false,160,255,200,0,0,0,4,0,false};gPresets[i].ovr=0;gPresets[i].oPat=1;gPresets[i].blend=0;gPresets[i].oA=128;for(uint8_t f=0;f<NUM_FACES;f++)gPresets[i].rot[f]=0;gPresets[i].name=String("Preset ")+String(i+1);prgStoreOne(i);}}}
+void prgBroadcast(){StaticJsonDocument<4096>d;JsonObject pr=d.createNestedObject("presetsG");JsonArray a=pr.createNestedArray("l");for(uint8_t i=0;i<gPrLen;i++){PresetG &pt=gPresets[i];JsonObject o=a.createNestedObject();o["i"]=i;o["name"]=pt.name;o["p"]=pt.p;o["spd"]=pt.pr.speed;o["dir"]=pt.pr.dirReverse?1:0;o["h"]=pt.pr.hue;o["s"]=pt.pr.sat;o["v"]=pt.pr.val;o["h2"]=pt.pr.hue2;o["s2"]=pt.pr.sat2;o["v2"]=pt.pr.val2;o["cs"]=pt.pr.chkStep;o["cb"]=pt.pr.chkBias;o["ci"]=pt.pr.chkInvert?1:0;o["ovr"]=pt.ovr;o["opat"]=pt.oPat;o["blend"]=pt.blend;o["oa"]=pt.oA;JsonArray r=o.createNestedArray("rot");for(uint8_t f=0;f<NUM_FACES;f++)r.add(pt.rot[f]);}String s;serializeJson(d,s);ws.textAll(s);}
+bool prgAdd(const String&name){if(gPrLen>=MAX_PRESETS)return false;PresetG &pt=gPresets[gPrLen++];pt.p=(uint8_t)currentPattern;pt.pr=liveParams;pt.ovr=ovrEn?1:0;pt.oPat=(uint8_t)ovrPattern;pt.blend=blendMode;pt.oA=ovrOpacity;for(uint8_t f=0;f<NUM_FACES;f++)pt.rot[f]=faceCfg[f].rotation;pt.name=name.length()?name:String("Preset ")+String(gPrLen);prgStoreOne(gPrLen-1);prgStoreCount();return true;}
+bool prgApply(uint8_t idx){if(idx>=gPrLen)return false;PresetG &pt=gPresets[idx];currentPattern=(Pattern)pt.p;liveParams=pt.pr;ovrEn=pt.ovr?true:false;ovrPattern=(Pattern)pt.oPat;blendMode=pt.blend;ovrOpacity=pt.oA;for(uint8_t f=0;f<NUM_FACES;f++)faceCfg[f].rotation=pt.rot[f];faceCfg[currentFace].pattern=currentPattern;faceCfg[currentFace].params=liveParams;scheduleSave();renderDirty=true;broadcastState(true);if(currentFace<NUM_FACES&&plPlay[currentFace])plPlay[currentFace]=false;userOverride=true;return true;}
 bool prgDup(uint8_t idx,const String&newName){if(idx>=gPrLen||gPrLen>=MAX_PRESETS)return false;gPresets[gPrLen]=gPresets[idx];gPresets[gPrLen].name=(newName.length()?newName:(gPresets[idx].name+String(" Copy")));prgStoreOne(gPrLen);gPrLen++;prgStoreCount();return true;}
 bool prgRen(uint8_t idx,const String&newName){if(idx>=gPrLen)return false;gPresets[idx].name=newName;char kn[8];snprintf(kn,sizeof(kn),"pn%u",idx);prefs.putString(kn,newName);return true;}
 bool prgDel(uint8_t idx){if(idx>=gPrLen)return false;for(uint8_t j=idx+1;j<gPrLen;j++){gPresets[j-1]=gPresets[j];PresetB b;char kbOld[8];snprintf(kbOld,sizeof(kbOld),"pg%u",j);prefs.getBytes(kbOld,&b,sizeof(b));char kbNew[8];snprintf(kbNew,sizeof(kbNew),"pg%u",j-1);prefs.putBytes(kbNew,&b,sizeof(b));char knOld[8];snprintf(knOld,sizeof(knOld),"pn%u",j);String nm=prefs.getString(knOld,"");char knNew[8];snprintf(knNew,sizeof(knNew),"pn%u",j-1);prefs.putString(knNew,nm);}char kb[8];snprintf(kb,sizeof(kb),"pg%u",gPrLen-1);prefs.remove(kb);char kn[8];snprintf(kn,sizeof(kn),"pn%u",gPrLen-1);prefs.remove(kn);gPrLen--;prgStoreCount();return true;}
 void clearPanels(){for(uint8_t f=0;f<NUM_FACES;f++)fill_solid(leds[f],NUM_LEDS_FACE,CRGB::Black);}
 void drawSolid(uint8_t h,uint8_t s,uint8_t v){CHSV c(h,s,v);for(uint8_t f=0;f<NUM_FACES;f++)fill_solid(leds[f],NUM_LEDS_FACE,c);}
 void drawBand(uint8_t targetV){CHSV onC(liveParams.hue,liveParams.sat,liveParams.val),offC(liveParams.hue2,liveParams.sat2,liveParams.val2);for(uint8_t f=0;f<NUM_FACES;f++)for(uint16_t i=0;i<NUM_LEDS_FACE;i++){uint8_t V=getVForPixel(f,i);leds[f][i]=(V==targetV)?onC:offC;}}
 void drawChecker(uint8_t step,uint8_t bias,bool invert){if(step==0)step=1;CHSV onC(liveParams.hue,liveParams.sat,liveParams.val),offC(liveParams.hue2,liveParams.sat2,liveParams.val2);for(uint8_t f=0;f<NUM_FACES;f++)for(uint16_t i=0;i<NUM_LEDS_FACE;i++){uint8_t V=getVForPixel(f,i);uint8_t Vb=(uint8_t)((V+bias)&15);bool on=((((uint8_t)(Vb/step))&1)==0);if(invert)on=!on;leds[f][i]=on?onC:offC;}}
 void drawRainbow(uint8_t baseHue){for(uint8_t f=0;f<NUM_FACES;f++)for(uint16_t i=0;i<NUM_LEDS_FACE;i++){uint8_t V=getVForPixel(f,i);uint8_t h=baseHue+(uint8_t)(V*8);leds[f][i]=CHSV(h,255,liveParams.val);}}
 CRGB chsvMix(uint8_t h,uint8_t s,uint8_t v){return CHSV(h,s,v);}
 CRGB overlayPixel(uint8_t face,uint16_t idx){switch(ovrPattern){case PATTERN_SOLID:{uint8_t h=ovcUse?g_oh:liveParams.hue;uint8_t s=ovcUse?g_os:liveParams.sat;uint8_t v=ovcUse?g_ov:liveParams.val;return chsvMix(h,s,v);}case PATTERN_BAND:{uint8_t V=getVForPixel(face,idx);uint8_t t=((uint8_t)floorf(ovBandPhase))&15;bool on=(V==t)||(((V+15)&15)==t);uint8_t h=on?(ovcUse?g_oh:liveParams.hue):(ovcUse?g_oh2:liveParams.hue2);uint8_t s=on?(ovcUse?g_os:liveParams.sat):(ovcUse?g_os2:liveParams.sat2);uint8_t v=on?(ovcUse?g_ov:liveParams.val):(ovcUse?g_ov2:liveParams.val2);return chsvMix(h,s,v);}case PATTERN_CHECKER:{uint8_t V=getVForPixel(face,idx);uint8_t Vb=(uint8_t)((V+(ovcUse?0:liveParams.chkBias))&15);uint8_t st=liveParams.chkStep==0?1:liveParams.chkStep;bool on=((((uint8_t)(Vb/st))&1)==0);uint8_t h=on?(ovcUse?g_oh:liveParams.hue):(ovcUse?g_oh2:liveParams.hue2);uint8_t s=on?(ovcUse?g_os:liveParams.sat):(ovcUse?g_os2:liveParams.sat2);uint8_t v=on?(ovcUse?g_ov:liveParams.val):(ovcUse?g_ov2:liveParams.val2);return chsvMix(h,s,v);}default:{uint8_t V=getVForPixel(face,idx);uint8_t h=(uint8_t)(ovRainbowPhase+V*8);uint8_t v=ovcUse?g_ov:liveParams.val;return chsvMix(h,255,v);}}}
 uint8_t clamp8(int v){return v<0?0:(v>255?255:v);}
 CRGB blendModeApply(CRGB base,CRGB ov,uint8_t a,uint8_t mode){uint8_t inv=255-a;switch(mode){case 0:return CRGB((base.r*inv+ov.r*a)/255,(base.g*inv+ov.g*a)/255,(base.b*inv+ov.b*a)/255);case 1:return CRGB(clamp8(base.r+((ov.r*a)/255)),clamp8(base.g+((ov.g*a)/255)),clamp8(base.b+((ov.b*a)/255)));case 2:return CRGB(max(base.r,(uint8_t)((ov.r*a)/255)),max(base.g,(uint8_t)((ov.g*a)/255)),max(base.b,(uint8_t)((ov.b*a)/255)));case 3:return CRGB((base.r*((ov.r*a)/255))/255,(base.g*((ov.g*a)/255))/255,(base.b*((ov.b*a)/255))/255);default:return CRGB(255-(((255-base.r)*(255-((ov.r*a)/255)))/255),255-(((255-base.g)*(255-((ov.g*a)/255)))/255),255-(((255-base.b)*(255-((ov.b*a)/255)))/255));}}
 void showPanels(){uint8_t eff=(uint8_t)((brightness*(uint16_t)gBrightness)/100);if(liveParams.sat<10&&liveParams.val>200)eff=min<uint8_t>(eff,10);FastLED.setBrightness(eff);FastLED.show();}
 void renderOnce(){switch(currentPattern){case PATTERN_SOLID:drawSolid(liveParams.hue,liveParams.sat,liveParams.val);break;case PATTERN_BAND:drawBand((uint8_t)floorf(bandPhase)&15);break;case PATTERN_CHECKER:drawChecker(liveParams.chkStep==0?1:liveParams.chkStep,liveParams.chkBias&15,liveParams.chkInvert);break;default:drawRainbow((uint8_t)rainbowPhase);break;}if(ovrEn){for(uint8_t f=0;f<NUM_FACES;f++)for(uint16_t i=0;i<NUM_LEDS_FACE;i++){CRGB ov=overlayPixel(f,i);leds[f][i]=blendModeApply(leds[f][i],ov,ovrOpacity,blendMode);}}showPanels();}
 uint8_t faceFromAccel(sensors_event_t &acc){const float th=3.5f;if(acc.acceleration.z> th)return 5;if(acc.acceleration.z<-th)return 0;if(acc.acceleration.x> th)return 3;if(acc.acceleration.x<-th)return 1;if(acc.acceleration.y> th)return 2;if(acc.acceleration.y<-th)return 4;return 255;}
 void stepToBin(const Step&s,StepB&b){b.kind=s.kind;b.p=s.p;b.spd=s.pr.speed;b.flags=(s.pr.dirReverse?1:0)|((s.pr.chkInvert?1:0)<<1);b.h=s.pr.hue;b.s=s.pr.sat;b.v=s.pr.val;b.h2=s.pr.hue2;b.s2=s.pr.sat2;b.v2=s.pr.val2;b.cs=s.pr.chkStep;b.cb=s.pr.chkBias;b.ovr=s.ovr;b.oPat=s.oPat;b.blend=s.blend;b.oA=s.oA;b.sec=s.sec;b.pi=s.pi;}
 void binToStep(const StepB&b,Step&s){s.kind=b.kind;s.p=b.p;s.pr.speed=b.spd;s.pr.dirReverse=(b.flags&1);s.pr.hue=b.h;s.pr.sat=b.s;s.pr.val=b.v;s.pr.hue2=b.h2;s.pr.sat2=b.s2;s.pr.val2=b.v2;s.pr.chkStep=b.cs;s.pr.chkBias=b.cb;s.pr.chkInvert=((b.flags>>1)&1);s.ovr=b.ovr;s.oPat=b.oPat;s.blend=b.blend;s.oA=b.oA;s.sec=b.sec;s.pi=b.pi;}
 void plSave(uint8_t f){uint8_t n=plLen[f];size_t sz=2+n*sizeof(StepB);uint8_t*buf=(uint8_t*)malloc(sz);if(!buf)return;buf[0]=n;buf[1]=plLoop[f]?1:0;StepB*b=(StepB*)(buf+2);for(uint8_t i=0;i<n;i++)stepToBin(playlist[f][i],b[i]);char k[8];snprintf(k,sizeof(k),"plb%u",f);prefs.putBytes(k,buf,sz);free(buf);}
 bool plLoadLegacyJSON(uint8_t f){char k[8];snprintf(k,sizeof(k),"pl%u",f);String s=prefs.getString(k,"");if(!s.length()){plLen[f]=0;plLoop[f]=false;return false;}StaticJsonDocument<4096>d;if(deserializeJson(d,s)){plLen[f]=0;plLoop[f]=false;return false;}plLen[f]=min<uint8_t>((uint8_t)(d["n"]|0),MAX_STEPS);plLoop[f]=(d["loop"]|0)?true:false;JsonArray a=d["l"];uint8_t i=0;for(JsonObject o:a){if(i>=plLen[f])break;Step &st=playlist[f][i++];st.kind=o["kind"]|0;st.p=o["p"]|0;st.pr.speed=o["spd"]|30;st.pr.dirReverse=(o["dir"]|0)?true:false;st.pr.hue=o["h"]|160;st.pr.sat=o["s"]|255;st.pr.val=o["v"]|200;st.pr.hue2=o["h2"]|0;st.pr.sat2=o["s2"]|0;st.pr.val2=o["v2"]|0;st.pr.chkStep=o["cs"]|4;st.pr.chkBias=o["cb"]|0;st.pr.chkInvert=(o["ci"]|0)?true:false;st.ovr=o["ovr"]|0;st.oPat=o["opat"]|1;st.blend=o["blend"]|0;st.oA=o["oa"]|128;st.sec=o["sec"]|10;st.pi=o["pi"]|0;}prefs.remove(k);plSave(f);return true;}
 void plLoad(uint8_t f){char k[8];snprintf(k,sizeof(k),"plb%u",f);size_t needMin=2;size_t got=prefs.getBytesLength(k);if(got>=needMin){uint8_t*buf=(uint8_t*)malloc(got);if(buf){prefs.getBytes(k,buf,got);uint8_t n=buf[0];uint8_t lp=buf[1];size_t expect=2+n*sizeof(StepB);if(got==expect&&n<=MAX_STEPS){plLen[f]=n;plLoop[f]=lp?true:false;StepB*b=(StepB*)(buf+2);for(uint8_t i=0;i<n;i++)binToStep(b[i],playlist[f][i]);free(buf);return;}free(buf);}plLen[f]=0;plLoop[f]=false;return;}if(plLoadLegacyJSON(f))return;plLen[f]=0;plLoop[f]=false;}
 void plBroadcast(uint8_t f){StaticJsonDocument<4096>d;JsonObject pl=d.createNestedObject("pl");pl["face"]=f;pl["loop"]=plLoop[f]?1:0;pl["play"]=plPlay[f]?1:0;JsonArray a=pl.createNestedArray("l");for(uint8_t i=0;i<plLen[f];i++){Step&s=playlist[f][i];JsonObject o=a.createNestedObject();o["kind"]=s.kind;o["p"]=s.p;o["spd"]=s.pr.speed;o["dir"]=s.pr.dirReverse?1:0;o["h"]=s.pr.hue;o["s"]=s.pr.sat;o["v"]=s.pr.val;o["h2"]=s.pr.hue2;o["s2"]=s.pr.sat2;o["v2"]=s.pr.val2;o["cs"]=s.pr.chkStep;o["cb"]=s.pr.chkBias;o["ci"]=s.pr.chkInvert?1:0;o["ovr"]=s.ovr;o["opat"]=s.oPat;o["blend"]=s.blend;o["oa"]=s.oA;o["sec"]=s.sec;o["pi"]=s.pi;}String s;serializeJson(d,s);ws.textAll(s);}
 void plApplyStep(uint8_t f,uint8_t i){if(i>=plLen[f])return;Step &st=playlist[f][i];if(st.kind==1){if(st.pi<gPrLen){PresetG &pt=gPresets[st.pi];currentPattern=(Pattern)pt.p;liveParams=pt.pr;ovrEn=pt.ovr?true:false;ovrPattern=(Pattern)pt.oPat;blendMode=pt.blend;ovrOpacity=pt.oA;}else{currentPattern=(Pattern)st.p;liveParams=st.pr;ovrEn=st.ovr?true:false;ovrPattern=(Pattern)st.oPat;blendMode=st.blend;ovrOpacity=st.oA;}}else{currentPattern=(Pattern)st.p;liveParams=st.pr;ovrEn=st.ovr?true:false;ovrPattern=(Pattern)st.oPat;blendMode=st.blend;ovrOpacity=st.oA;}renderDirty=true;}
 void plStart(uint8_t f){if(plLen[f]==0)return;plPlay[f]=true;plIdx[f]=0;plApplyStep(f,0);plDueMs[f]=millis()+((uint32_t)playlist[f][0].sec*1000);}
 void plStop(uint8_t f){plPlay[f]=false;}
-void broadcastState(bool includeParams){StaticJsonDocument<512>d;JsonObject st=d.createNestedObject("state");st["brightness"]=brightness;st["gbr"]=gBrightness;st["face"]=currentFace;st["pattern_idx"]=(uint8_t)currentPattern;st["ovr"]=ovrEn?1:0;st["ovr_idx"]=(uint8_t)ovrPattern;st["blend_idx"]=blendMode;st["ovrA"]=ovrOpacity;st["ovrSpd"]=ovrSpeed;JsonObject o=d.createNestedObject("ovc");o["use"]=ovcUse?1:0;o["h"]=g_oh;o["s"]=g_os;o["v"]=g_ov;o["h2"]=g_oh2;o["s2"]=g_os2;o["v2"]=g_ov2;if(includeParams){JsonObject p=d.createNestedObject("params");p["speed"]=liveParams.speed;p["reverse"]=liveParams.dirReverse?1:0;p["hue"]=liveParams.hue;p["sat"]=liveParams.sat;p["val"]=liveParams.val;p["hue2"]=liveParams.hue2;p["sat2"]=liveParams.sat2;p["val2"]=liveParams.val2;p["chkStep"]=liveParams.chkStep;p["chkBias"]=liveParams.chkBias;p["chkInvert"]=liveParams.chkInvert?1:0;}String s;serializeJson(d,s);ws.textAll(s);}
+void broadcastState(bool includeParams){StaticJsonDocument<512>d;JsonObject st=d.createNestedObject("state");st["brightness"]=brightness;st["gbr"]=gBrightness;st["face"]=currentFace;st["pattern_idx"]=(uint8_t)currentPattern;st["ovr"]=ovrEn?1:0;st["ovr_idx"]=(uint8_t)ovrPattern;st["blend_idx"]=blendMode;st["ovrA"]=ovrOpacity;st["ovrSpd"]=ovrSpeed;JsonArray r=st.createNestedArray("rot");for(uint8_t f=0;f<NUM_FACES;f++)r.add(faceCfg[f].rotation);JsonObject o=d.createNestedObject("ovc");o["use"]=ovcUse?1:0;o["h"]=g_oh;o["s"]=g_os;o["v"]=g_ov;o["h2"]=g_oh2;o["s2"]=g_os2;o["v2"]=g_ov2;if(includeParams){JsonObject p=d.createNestedObject("params");p["speed"]=liveParams.speed;p["reverse"]=liveParams.dirReverse?1:0;p["hue"]=liveParams.hue;p["sat"]=liveParams.sat;p["val"]=liveParams.val;p["hue2"]=liveParams.hue2;p["sat2"]=liveParams.sat2;p["val2"]=liveParams.val2;p["chkStep"]=liveParams.chkStep;p["chkBias"]=liveParams.chkBias;p["chkInvert"]=liveParams.chkInvert?1:0;}String s;serializeJson(d,s);ws.textAll(s);}
 const char INDEX_HTML_V2[] PROGMEM=R"HTML(<!doctype html><html><head><meta charset=utf-8><meta name=viewport content="width=device-width,initial-scale=1"><title>CUBERT</title><style>body{font-family:system-ui,Arial,Helvetica,sans-serif;margin:16px;background:#111;color:#eee}._{background:#1b1b1b;border-radius:14px;padding:14px;margin-bottom:12px;box-shadow:0 2px 10px #0008}.r{display:flex;gap:10px;flex-wrap:wrap;align-items:center}.row{display:flex;gap:10px;align-items:center;margin-top:8px}label{font-size:12px;color:#aaa;margin-right:6px}.lab{width:86px;text-align:right;color:#aaa;font-size:12px}input[type=range]{width:220px}select,button,input{background:#222;color:#eee;border:1px solid #333;border-radius:8px;padding:6px}button{cursor:pointer}.b{display:inline-block;padding:3px 8px;border-radius:999px;background:#2a2a2a;margin-left:8px;font-size:12px}.cw{position:relative;width:220px;height:220px}.w{border-radius:50%;cursor:crosshair;border:1px solid #333;background:#000}._m{position:absolute;width:12px;height:12px;border:2px solid #fff;border-radius:50%;box-shadow:0 0 4px #000;pointer-events:none;transform:translate(-6px,-6px)}.tabs{display:flex;gap:8px;margin-bottom:12px}.tabs button{background:#222}.active{background:#2b2b2b}.hide{display:none}h2{margin:0 0 8px 0}#plList .r{justify-content:space-between}</style></head><body><div class=tabs><button id=tMain class=active>Main</button><button id=tPl>Playlists</button><button id=tPr>Presets</button></div><div class="_"><label>Master Brightness</label><input id=gbr type=range min=10 max=100 value=100><span class=b id=wsb>ws:…</span></div><div id=pMain><div class="_"><h2>Face <span id=f>?</span> <span class=b id=s>connecting…</span></h2><div class=r><label>Pattern</label><select id=p><option value=0>Solid</option><option value=1>Band</option><option value=2>Checker</option><option value=3>Rainbow</option></select><label>Speed</label><input id=spd type=range min=1 max=100 value=30><label>Reverse</label><input id=rev type=checkbox><label>Face Brightness</label><input id=br type=range min=5 max=30 value=30><button id=def>Reset Pattern</button></div></div><div class="_"><h3>Main color</h3><div class=cw><canvas id=w1 width=220 height=220 class=w></canvas><div id=m1 class=_m></div></div><div class=row><div class=lab>Saturation</div><input id=s1 type=range min=0 max=255 value=255></div><div class=row><div class=lab>Brightness</div><input id=v1 type=range min=0 max=255 value=200></div></div><div class="_"><h3>Second color</h3><div class=cw><canvas id=w2 width=220 height=220 class=w></canvas><div id=m2 class=_m></div></div><div class=row><div class=lab>Saturation</div><input id=s2 type=range min=0 max=255 value=0></div><div class=row><div class=lab>Brightness</div><input id=v2 type=range min=0 max=255 value=0></div></div><div class="_"><h3>Layers</h3><div class=r><label>Enable Overlay</label><input id=ovr type=checkbox><label>Overlay Pattern</label><select id=ovrPat><option value=0>Solid</option><option value=1>Band</option><option value=2>Checker</option><option value=3>Rainbow</option></select><label>Blend</label><select id=blend><option value=0>Alpha</option><option value=1>Add</option><option value=2>Max</option><option value=3>Multiply</option><option value=4>Screen</option></select><label>Opacity</label><input id=ovrA type=range min=0 max=255 value=128><label>Speed</label><input id=ovrSpd type=range min=1 max=100 value=30></div><div class=r><label>Overlay Colors</label><select id=ovcMode><option value=0>Use Base</option><option value=1>Use Overlay</option></select></div><div id=ovcUI class="r hide"><div><div class=cw><canvas id=ow1 width=220 height=220 class=w></canvas><div id=om1 class=_m></div></div><div class=row><div class=lab>Saturation</div><input id=os1 type=range min=0 max=255 value=255></div><div class=row><div class=lab>Brightness</div><input id=ov1 type=range min=0 max=255 value=200></div></div><div><div class=cw><canvas id=ow2 width=220 height=220 class=w></canvas><div id=om2 class=_m></div></div><div class=row><div class=lab>Saturation</div><input id=os2 type=range min=0 max=255 value=0></div><div class=row><div class=lab>Brightness</div><input id=ov2b type=range min=0 max=255 value=0></div></div></div></div></div><div id=pPl style=display:none><div class="_"><h3>Playlists</h3><div class=r><label>Step Duration(s)</label><input id=plDur type=number min=1 max=600 step=1 value=10><button id=plAdd>Use Current</button><select id=plPreset></select><button id=plAddPreset>Add Preset</button><button id=plPlay>Play</button><button id=plStop>Stop</button><label>Loop</label><input id=plLoop type=checkbox><span class=b id=plInfo>0 steps</span></div><div id=plList></div></div></div><div id=pPr style=display:none><div class="_"><h3>Presets</h3><div class=r><input id=prName placeholder="Preset name"><button id=prSave>Save Preset</button><span class=b id=prInfo></span></div><div id=prList></div></div></div><script>let ws,up=false,F=255,H=160,S=255,V=200,H2=0,S2=0,V2=0,OVR=false,OPAT=1,BLD=0,OPA=128,OVC=0,OH=160,OS=255,OV=200,OH2=0,OS2=0,OV2=0,OSPD=30,PRN={};function q(i){return document.getElementById(i)}function drawWheel(c){const x=c.getContext("2d"),w=c.width,h=c.height,C=w/2,D=h/2,R=Math.min(C,D)-1,i=x.createImageData(w,h),d=i.data;function hsv2rgb(hh,ss,vv){hh/=255;ss/=255;vv/=255;let I=Math.floor(hh*6),f=hh*6-I,p=vv*(1-ss),Q=vv*(1-f*ss),t=vv*(1-(1-f)*ss),r,g,b;switch(I%6){case 0:r=vv;g=t;b=p;break;case 1:r=Q;g=vv;b=p;break;case 2:r=p;g=vv;b=t;break;case 3:r=p;g=Q;b=vv;break;case 4:r=t;g=p;b=vv;break;default:r=vv;g=p;b=Q}return[r*255,g*255,b*255]}for(let y=0;y<h;y++)for(let e=0;e<w;e++){const u=e-C,v=y-D,r=Math.sqrt(u*u+v*v);const o=(y*w+e)*4;if(r>R){d[o+3]=0;continue}let a=Math.atan2(v,u);if(a<0)a+=Math.PI*2;const hh=Math.round((a/(Math.PI*2))*255),ss=Math.min(255,Math.round((r/R)*255));const g=hsv2rgb(hh,ss,255);d[o]=g[0];d[o+1]=g[1];d[o+2]=g[2];d[o+3]=255}x.putImageData(i,0,0)}function mark(m,cv,h,s){const w=cv.width,hc=cv.height,C=w/2,D=hc/2,R=Math.min(C,D)-1,a=(h/255)*Math.PI*2,r=(s/255)*R,x=C+Math.cos(a)*r,y=D+Math.sin(a)*r;m.style.left=x+'px';m.style.top=y+'px'}function throttle(fn,ms){let t=0,last=null,pend=false;return function(...a){const n=Date.now();last=a;if(n-t>=ms){t=n;fn.apply(null,a);pend=false}else if(!pend){pend=true;setTimeout(()=>{t=Date.now();fn.apply(null,last);pend=false},ms-(n-t))}}}function wheel(cv,mk,setter){const rect=()=>cv.getBoundingClientRect(),C=cv.width/2,D=cv.height/2,R=Math.min(C,D)-1;const sendTh=throttle((hh,ss)=>setter(hh,ss),50);function setFrom(e){const r=rect(),x=(e.touches?e.touches[0].clientX:e.clientX)-r.left,y=(e.touches?e.touches[0].clientY:e.clientY)-r.top,dx=x-C,dy=y-D;let ang=Math.atan2(dy,dx);if(ang<0)ang+=Math.PI*2;let rad=Math.sqrt(dx*dx+dy*dy);if(rad>R)rad=R;const hh=Math.round((ang/(Math.PI*2))*255),ss=Math.round((rad/R)*255);sendTh(hh,ss);mark(mk,cv,hh,ss)}cv.addEventListener('mousedown',e=>{setFrom(e);const mv=ev=>setFrom(ev),upF=()=>{window.removeEventListener('mousemove',mv);window.removeEventListener('mouseup',upF)};window.addEventListener('mousemove',mv);window.addEventListener('mouseup',upF)});cv.addEventListener('touchstart',e=>{setFrom(e)},{passive:true});cv.addEventListener('touchmove',e=>{setFrom(e)},{passive:true})}function send(o){if(ws&&ws.readyState===1)ws.send(JSON.stringify(o))}function sendThrottled(ms){return throttle(o=>send(o),ms)}const send40=sendThrottled(40);function wsTarget(){const h=location.host;if(h&&h!=='')return h;return'192.168.4.1'}function connect(){const prot=(location.protocol==='https:')?'wss':'ws';const h=wsTarget();let pInt=null;function open(){try{ws=new WebSocket(prot+'://'+h+'/ws');ws.onopen=()=>{q('s').textContent='connected';q('wsb').textContent='ws:'+h;if(pInt)clearInterval(pInt);pInt=setInterval(()=>send({cmd:'ping'}),3000);send({cmd:'prg_list'});send({cmd:'pl_fetch'})};ws.onclose=()=>{q('s').textContent='reconnecting…';if(pInt)clearInterval(pInt);setTimeout(open,800)};ws.onmessage=ev=>{try{const m=JSON.parse(ev.data);if(m.state){up=true;F=m.state.face;q('f').textContent=(F==255?'?':F);q('p').value=m.state.pattern_idx??0;q('br').value=m.state.brightness??30;q('gbr').value=m.state.gbr??100;document.getElementById('ovr').checked=!!m.state.ovr;document.getElementById('ovrPat').value=m.state.ovr_idx??1;document.getElementById('blend').value=m.state.blend_idx??0;document.getElementById('ovrA').value=m.state.ovrA??128;q('ovrSpd').value=m.state.ovrSpd??30;OSPD=m.state.ovrSpd??30;const p=m.params||{};q('spd').value=p.speed??30;q('rev').checked=!!p.reverse;H=p.hue??160;S=p.sat??255;V=p.val??200;H2=p.hue2??0;S2=p.sat2??0;V2=p.val2??0;q('s1').value=S;q('v1').value=V;q('s2').value=S2;q('v2').value=V2;mark(q('m1'),q('w1'),H,S);mark(q('m2'),q('w2'),H2,S2);const o=m.ovc||{};OVC=o.use?1:0;OH=o.h??H;OS=o.s??S;OV=o.v??V;OH2=o.h2??H2;OS2=o.s2??S2;OV2=o.v2??V2;q('ovcMode').value=OVC;q('os1').value=OS;q('ov1').value=OV;q('os2').value=OS2;q('ov2b').value=OV2;if(OVC){q('ovcUI').classList.remove('hide')}else{q('ovcUI').classList.add('hide')}mark(q('om1'),q('ow1'),OH,OS);mark(q('om2'),q('ow2'),OH2,OS2);up=false}if(m.pl&&m.pl.face==F){renderPL(m.pl)}if(m.presetsG){renderPresetsG(m.presetsG)}}catch(e){}}}catch(_){setTimeout(open,1200)}}open()}function onChange(id,fn,th=false){const el=q(id);const fire=(e)=>{if(up)return;fn(el,e)};if(th){const thr=throttle(()=>fn(el),50);el.addEventListener('input',()=>{if(up)return;thr()});el.addEventListener('change',fire)}else{el.addEventListener('input',fire);el.addEventListener('change',fire)}}function tabs(){const m=q('tMain'),pl=q('tPl'),pr=q('tPr'),pM=q('pMain'),pP=q('pPl'),pR=q('pPr');function act(x){m.classList.remove('active');pl.classList.remove('active');pr.classList.remove('active');pM.style.display='none';pP.style.display='none';pR.style.display='none';if(x==='pl'){pl.classList.add('active');pP.style.display='block';send({cmd:'pl_fetch'});send({cmd:'prg_list'})}else if(x==='pr'){pr.classList.add('active');pR.style.display='block';send({cmd:'prg_list'})}else{m.classList.add('active');pM.style.display='block';send({cmd:'pl_stop'})}}m.onclick=()=>act('main');pl.onclick=()=>act('pl');pr.onclick=()=>act('pr')}function renderPL(m){const l=m.l||[];q('plInfo').textContent=l.length+' steps';const root=q('plList');root.innerHTML='';l.forEach((st,i)=>{const row=document.createElement('div');row.className='r';const nm=(st.kind==1?('['+(PRN[st.pi]||('Preset '+(st.pi??0)))+']'):(['Solid','Band','Checker','Rainbow','Twinkle','Noise','Sinewave'][st.p]||'P'));const sp=document.createElement('span');sp.textContent=(i+1)+'. '+nm+' '+st.sec+'s';row.appendChild(sp);const upb=document.createElement('button');upb.textContent='▲';upb.onclick=()=>send({cmd:'pl_move',i:i,dir:-1});row.appendChild(upb);const dnb=document.createElement('button');dnb.textContent='▼';dnb.onclick=()=>send({cmd:'pl_move',i:i,dir:1});row.appendChild(dnb);const del=document.createElement('button');del.textContent='✖';del.onclick=()=>send({cmd:'pl_del',i:i});row.appendChild(del);root.appendChild(row)});q('plLoop').checked=!!m.loop}function renderPresetsG(m){const l=m.l||[];q('prInfo').textContent=l.length+' items';PRN={};const root=q('prList');root.innerHTML='';const dd=q('plPreset');dd.innerHTML='';l.forEach(st=>{PRN[st.i]=st.name||('Preset '+st.i);const row=document.createElement('div');row.className='r';const name=document.createElement('span');name.textContent=PRN[st.i];row.appendChild(name);const ap=document.createElement('button');ap.textContent='Apply';ap.onclick=()=>send({cmd:'prg_apply',i:st.i});row.appendChild(ap);const du=document.createElement('button');du.textContent='Duplicate';du.onclick=()=>{const nn=prompt('Duplicate name',PRN[st.i]+' Copy');if(nn&&nn.length)send({cmd:'prg_dup',i:st.i,name:nn})};row.appendChild(du);const rn=document.createElement('button');rn.textContent='Rename';rn.onclick=()=>{const nn=prompt('New name',PRN[st.i]);if(nn&&nn.length)send({cmd:'prg_ren',i:st.i,name:nn})};row.appendChild(rn);const de=document.createElement('button');de.textContent='Delete';de.onclick=()=>send({cmd:'prg_del',i:st.i});row.appendChild(de);root.appendChild(row);const opt=document.createElement('option');opt.value=st.i;opt.textContent=PRN[st.i];dd.appendChild(opt)})}drawWheel(q('w1'));drawWheel(q('w2'));drawWheel(q('ow1'));drawWheel(q('ow2'));wheel(q('w1'),q('m1'),(h,s)=>{H=h;S=s;send40({cmd:'param',k:'hue',v:H});send40({cmd:'param',k:'sat',v:S})});wheel(q('w2'),q('m2'),(h,s)=>{H2=h;S2=s;send40({cmd:'param',k:'hue2',v:H2});send40({cmd:'param',k:'sat2',v:S2})});wheel(q('ow1'),q('om1'),(h,s)=>{OH=h;OS=s;send40({cmd:'ovc',k:'h',v:OH});send40({cmd:'ovc',k:'s',v:OS})});wheel(q('ow2'),q('om2'),(h,s)=>{OH2=h;OS2=s;send40({cmd:'ovc',k:'h2',v:OH2});send40({cmd:'ovc',k:'s2',v:OS2})});function onChangePair(id,key){onChange(id,el=>send40({cmd:'param',k:key,v:parseInt(el.value)}),true)}onChange('p',el=>send({cmd:'pattern_idx',v:parseInt(el.value)}));onChangePair('spd','speed');onChange('rev',el=>send({cmd:'param',k:'reverse',v:el.checked?1:0}));onChangePair('br','brightness');onChangePair('s1','sat');onChangePair('v1','val');onChangePair('s2','sat2');onChangePair('v2','val2');onChangePair('gbr','gbr');onChange('ovrA',el=>send40({cmd:'overlay',a:parseInt(el.value)}),true);onChange('ovrSpd',el=>send40({cmd:'overlay',speed:parseInt(el.value)}),true);onChange('blend',el=>send({cmd:'overlay',blendIdx:parseInt(el.value)}));onChange('ovrPat',el=>send({cmd:'overlay',pat:parseInt(el.value)}));q('ovr').addEventListener('change',e=>send({cmd:'overlay',en:e.target.checked?1:0}));q('ovcMode').addEventListener('change',e=>{const v=parseInt(e.target.value);send({cmd:'ovcMode',v:v});if(v){q('ovcUI').classList.remove('hide')}else{q('ovcUI').classList.add('hide')}});q('os1').addEventListener('input',e=>send40({cmd:'ovc',k:'s',v:parseInt(e.target.value)}));q('ov1').addEventListener('input',e=>send40({cmd:'ovc',k:'v',v:parseInt(e.target.value)}));q('os2').addEventListener('input',e=>send40({cmd:'ovc',k:'s2',v:parseInt(e.target.value)}));q('ov2b').addEventListener('input',e=>send40({cmd:'ovc',k:'v2',v:parseInt(e.target.value)}));q('def').onclick=()=>send({cmd:'defaults'});q('plAdd').onclick=()=>{const s=parseInt(q('plDur').value)||10;send({cmd:'pl_add',sec:s})};q('plAddPreset').onclick=()=>{const s=parseInt(q('plDur').value)||10;const pi=parseInt(q('plPreset').value)||0;send({cmd:'pl_add_preset',sec:s,pi:pi})};q('plPlay').onclick=()=>send({cmd:'pl_play'});q('plStop').onclick=()=>send({cmd:'pl_stop'});q('plLoop').onchange=e=>send({cmd:'pl_loop',v:e.target.checked?1:0});q('prSave').onclick=()=>{const n=q('prName').value||'';send({cmd:'prg_save',name:n})};(function(){tabs();connect()})();</script></body></html>)HTML";
 void onWsEvent(AsyncWebSocket*,AsyncWebSocketClient* c,AwsEventType type,void*arg,uint8_t*data,size_t len){if(type==WS_EVT_CONNECT){broadcastState(true);prgBroadcast();if(currentFace<NUM_FACES)plBroadcast(currentFace);return;}if(type!=WS_EVT_DATA)return;AwsFrameInfo*info=(AwsFrameInfo*)arg;if(!(info->final&&info->index==0&&info->len==len&&info->opcode==WS_TEXT))return;StaticJsonDocument<1600> doc;if(deserializeJson(doc,data,len))return;const char*cmd=doc["cmd"]|"";uint32_t now=millis();faceHoldUntilMs=now+FACE_HOLD_MS;if(!strcmp(cmd,"ping")){return;}auto stopPL=[&](){if(currentFace<NUM_FACES&&plPlay[currentFace])plPlay[currentFace]=false;};if(!strcmp(cmd,"pattern_idx")){uint8_t v=(uint8_t)(doc["v"]|0);if(v>6)v=0;currentPattern=(Pattern)v;faceCfg[currentFace].pattern=currentPattern;scheduleSave();renderDirty=true;stopPL();userOverride=true;return;}if(!strcmp(cmd,"overlay")){if(doc.containsKey("en"))ovrEn=(doc["en"]|0)?true:false;if(doc.containsKey("pat")){uint8_t v=(uint8_t)(doc["pat"]|1);if(v>6)v=1;ovrPattern=(Pattern)v;ovrEn=true;}if(doc.containsKey("blendIdx")){uint8_t v=(uint8_t)(doc["blendIdx"]|0);if(v>4)v=0;blendMode=v;ovrEn=true;}if(doc.containsKey("a"))ovrOpacity=(uint8_t)constrain((int)doc["a"],0,255);if(doc.containsKey("speed"))ovrSpeed=(uint8_t)constrain((int)doc["speed"],1,100);renderDirty=true;stopPL();userOverride=true;broadcastState(false);return;}if(!strcmp(cmd,"ovcMode")){uint8_t v=(uint8_t)(doc["v"]|0);ovcUse=(v?true:false);saveOverlayGlobals();renderDirty=true;broadcastState(false);stopPL();userOverride=true;return;}if(!strcmp(cmd,"ovc")){const char*k=doc["k"]|"";int v=doc["v"]|0;if(!strcmp(k,"h"))g_oh=(uint8_t)constrain(v,0,255);else if(!strcmp(k,"s"))g_os=(uint8_t)constrain(v,0,255);else if(!strcmp(k,"v"))g_ov=(uint8_t)constrain(v,0,255);else if(!strcmp(k,"h2"))g_oh2=(uint8_t)constrain(v,0,255);else if(!strcmp(k,"s2"))g_os2=(uint8_t)constrain(v,0,255);else if(!strcmp(k,"v2"))g_ov2=(uint8_t)constrain(v,0,255);saveOverlayGlobals();renderDirty=true;stopPL();userOverride=true;return;}if(!strcmp(cmd,"param")){const char*k=doc["k"]|"";int vInt=doc["v"]|0;if(!strcmp(k,"speed")){liveParams.speed=(uint8_t)constrain(vInt,1,100);}else if(!strcmp(k,"reverse")){liveParams.dirReverse=(vInt?true:false);}else if(!strcmp(k,"brightness")){brightness=(uint8_t)constrain(vInt,BRIGHT_MIN,BRIGHT_MAX);}else if(!strcmp(k,"gbr")){gBrightness=(uint8_t)constrain(vInt,10,100);prefs.putUChar("gbr",gBrightness);}else if(!strcmp(k,"hue")){liveParams.hue=(uint8_t)constrain(vInt,0,255);}else if(!strcmp(k,"sat")){liveParams.sat=(uint8_t)constrain(vInt,0,255);}else if(!strcmp(k,"val")){liveParams.val=(uint8_t)constrain(vInt,0,255);}else if(!strcmp(k,"hue2")){liveParams.hue2=(uint8_t)constrain(vInt,0,255);}else if(!strcmp(k,"sat2")){liveParams.sat2=(uint8_t)constrain(vInt,0,255);}else if(!strcmp(k,"val2")){liveParams.val2=(uint8_t)constrain(vInt,0,255);}else if(!strcmp(k,"chkStep")){liveParams.chkStep=(uint8_t)constrain(vInt,1,16);}else if(!strcmp(k,"chkBias")){liveParams.chkBias=(uint8_t)constrain(vInt,0,15);}else if(!strcmp(k,"chkInvert")){liveParams.chkInvert=(vInt?true:false);}faceCfg[currentFace].params=liveParams;scheduleSave();renderDirty=true;stopPL();userOverride=true;return;}if(!strcmp(cmd,"defaults")){faceCfg[currentFace]=FaceConfig{PATTERN_SOLID,{30,false,160,255,200,0,0,0,4,0,false}};applyFaceConfig(currentFace);scheduleSave();broadcastState(true);renderDirty=true;stopPL();userOverride=true;return;}if(!strcmp(cmd,"pl_fetch")){if(currentFace<NUM_FACES)plBroadcast(currentFace);return;}if(!strcmp(cmd,"pl_add")){uint16_t sec=(uint16_t)(doc["sec"]|10);if(currentFace<NUM_FACES&&plLen[currentFace]<MAX_STEPS){Step st;st.kind=0;st.p=(uint8_t)currentPattern;st.pr=liveParams;st.ovr=ovrEn?1:0;st.oPat=(uint8_t)ovrPattern;st.blend=blendMode;st.oA=ovrOpacity;st.sec=sec;st.pi=0;playlist[currentFace][plLen[currentFace]++]=st;plSave(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"pl_add_preset")){uint16_t sec=(uint16_t)(doc["sec"]|10);uint8_t pi=(uint8_t)(doc["pi"]|0);if(currentFace<NUM_FACES&&plLen[currentFace]<MAX_STEPS){Step st;st.kind=1;st.p=0;st.pr=liveParams;st.ovr=0;st.oPat=1;st.blend=0;st.oA=128;st.sec=sec;st.pi=pi;playlist[currentFace][plLen[currentFace]++]=st;plSave(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"pl_del")){int i=doc["i"]|0;if(currentFace<NUM_FACES&&i>=0&&i<plLen[currentFace]){for(int j=i+1;j<plLen[currentFace];j++)playlist[currentFace][j-1]=playlist[currentFace][j];plLen[currentFace]--;plSave(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"pl_move")){int i=doc["i"]|0;int dir=doc["dir"]|0;int j=i+dir;if(currentFace<NUM_FACES&&i>=0&&i<plLen[currentFace]&&j>=0&&j<plLen[currentFace]){Step tmp=playlist[currentFace][i];playlist[currentFace][i]=playlist[currentFace][j];playlist[currentFace][j]=tmp;plSave(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"pl_loop")){if(currentFace<NUM_FACES){plLoop[currentFace]=(doc["v"]|0)?true:false;plSave(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"pl_play")){userOverride=false;if(currentFace<NUM_FACES){plStart(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"pl_stop")){userOverride=true;if(currentFace<NUM_FACES){plStop(currentFace);plBroadcast(currentFace);}return;}if(!strcmp(cmd,"prg_list")){prgBroadcast();return;}if(!strcmp(cmd,"prg_save")){const char*nm=doc["name"]|"";prgAdd(String(nm));prgBroadcast();return;}if(!strcmp(cmd,"prg_apply")){int i=doc["i"]|0;prgApply((uint8_t)i);return;}if(!strcmp(cmd,"prg_dup")){int i=doc["i"]|0;const char*nm=doc["name"]|"";prgDup((uint8_t)i,String(nm));prgBroadcast();return;}if(!strcmp(cmd,"prg_ren")){int i=doc["i"]|0;const char*nm=doc["name"]|"";prgRen((uint8_t)i,String(nm));prgBroadcast();return;}if(!strcmp(cmd,"prg_del")){int i=doc["i"]|0;prgDel((uint8_t)i);prgBroadcast();return;}}
 void initPanels(){FastLED.addLeds<WS2812B,PIN_FACE0,GRB>(leds[0],NUM_LEDS_FACE);FastLED.addLeds<WS2812B,PIN_FACE1,GRB>(leds[1],NUM_LEDS_FACE);FastLED.addLeds<WS2812B,PIN_FACE2,GRB>(leds[2],NUM_LEDS_FACE);FastLED.addLeds<WS2812B,PIN_FACE3,GRB>(leds[3],NUM_LEDS_FACE);FastLED.addLeds<WS2812B,PIN_FACE4,GRB>(leds[4],NUM_LEDS_FACE);FastLED.addLeds<WS2812B,PIN_FACE5,GRB>(leds[5],NUM_LEDS_FACE);FastLED.setCorrection(TypicalLEDStrip);FastLED.setBrightness(BRIGHT_MAX);clearPanels();FastLED.show();}
 void setup(){Wire.begin(21,22);imuOK=mpu.begin();if(imuOK){mpu.setAccelerometerRange(MPU6050_RANGE_8_G);mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);}prefs.begin("cubert",false);loadOverlayGlobals();for(uint8_t f=0;f<NUM_FACES;f++){if(!loadFaceFromPrefs(f))defaultsFace(f);plLoad(f);}prgLoad();initPanels();WiFi.persistent(false);WiFi.setSleep(false);WiFi.mode(WIFI_AP);IPAddress apIP(192,168,4,1),gw(192,168,4,1),msk(255,255,255,0);WiFi.softAPConfig(apIP,gw,msk);if(AP_PASS&&strlen(AP_PASS)>0)WiFi.softAP(AP_SSID,AP_PASS,6,false,4);else WiFi.softAP(AP_SSID,NULL,6,false,4);server.on("/",HTTP_GET,[](AsyncWebServerRequest*req){req->send_P(200,"text/html; charset=utf-8",INDEX_HTML_V2);});ws.onEvent(onWsEvent);server.addHandler(&ws);DefaultHeaders::Instance().addHeader("Access-Control-Allow-Origin","*");server.begin();sensors_event_t a,g,t;uint8_t f=255;if(imuOK){mpu.getEvent(&a,&g,&t);f=faceFromAccel(a);}currentFace=(f<NUM_FACES)?f:0;applyFaceConfig(currentFace);if(plLen[currentFace]>0){plStart(currentFace);userOverride=false;}else{currentPattern=PATTERN_SOLID;liveParams.hue=192;liveParams.sat=255;liveParams.val=200;faceCfg[currentFace].pattern=currentPattern;faceCfg[currentFace].params=liveParams;scheduleSave();userOverride=true;}lastAnimMs=millis();nextFrameMs=millis();broadcastState(true);plBroadcast(currentFace);prgBroadcast();}
 void loop(){if(savePending&&millis()>=saveDue)saveNow();if(imuOK){sensors_event_t a,g,t;mpu.getEvent(&a,&g,&t);uint8_t f=faceFromAccel(a);uint32_t now=millis();if(f!=255&&now>=faceHoldUntilMs){if(f!=currentFace){if(currentFace<NUM_FACES)plStop(currentFace);currentFace=f;if(currentFace<NUM_FACES){applyFaceConfig(currentFace);broadcastState(true);plBroadcast(currentFace);if(plLen[currentFace]>0&&!userOverride)plStart(currentFace);}}}}uint32_t now=millis(),dt=now-lastAnimMs;lastAnimMs=now;float sn=liveParams.speed/100.0f;float vps=0.02f+powf(sn,2.2f)*8.0f;float dir=liveParams.dirReverse?-1.0f:1.0f;bandPhase+=dir*vps*(dt/1000.0f)*16.0f;rainbowPhase+=dir*vps*(dt/1000.0f)*256.0f;float ovsn=ovrSpeed/100.0f;float ovvps=0.02f+powf(ovsn,2.2f)*8.0f;ovBandPhase+=ovvps*(dt/1000.0f)*16.0f;ovRainbowPhase+=ovvps*(dt/1000.0f)*256.0f;if(currentFace<NUM_FACES&&plPlay[currentFace]){if(now>=plDueMs[currentFace]){plIdx[currentFace]++;if(plIdx[currentFace]>=plLen[currentFace]){if(plLoop[currentFace])plIdx[currentFace]=0;else{plStop(currentFace);goto skip;}}plApplyStep(currentFace,plIdx[currentFace]);plDueMs[currentFace]=now+((uint32_t)playlist[currentFace][plIdx[currentFace]].sec*1000);renderDirty=true;}}{bool anim=(currentPattern==PATTERN_BAND||currentPattern==PATTERN_RAINBOW||ovrEn);if(anim)renderDirty=true;}skip:if(renderDirty&&now>=nextFrameMs){renderDirty=false;nextFrameMs=now+FRAME_MS;renderOnce();}delay(1);}
